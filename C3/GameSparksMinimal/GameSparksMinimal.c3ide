{"Id":"e5e5e516-169e-4bd0-b573-f206e1bb3018","Name":"GameSparksMinimal","Class":"GameSparksMinimal","Company":"Mikal","Author":"Mikal","Version":"0.1.0.0","Description":"Gamesparks Minmal Plugin, only does initialization, SendData, Returns Response. User must manually format the data to send. Use C3 JSON plugin to format data to send and parse response data.","AddonFolder":"C:\\Users\\Dan Shimizu\\AppData\\Roaming\\C3IDE_DATA\\Server\\Test\\gamesparksminimal","Type":0,"IconXml":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!-- Generator: Adobe Illustrator 16.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\r\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\r\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n\t width=\"1700.79004px\" height=\"1700.79004px\" viewBox=\"499 379 690 690\"\r\n\t enable-background=\"new 0 0 1700.79004 1700.79004\" xml:space=\"preserve\">\r\n<g id=\"bg\">\r\n\t<g>\r\n\t\t<g>\r\n\t\t\t<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" fill=\"#D2E1F0\" d=\"M850.39453,860.66992\r\n\t\t\t\tc-50.35645,0-94.3252-27.35645-117.85254-68.02051l-80.03027,46.2041c-4.6543,2.68945-6.13086,8.71875-3.24805,13.25586\r\n\t\t\t\tC691.50098,918.5957,765.7959,962.7168,850.39453,962.7168c88.12598,0,165.07129-47.875,206.24316-119.03613l-80.48633-46.46973\r\n\t\t\t\tc-4.31445-2.49023-9.80273-1.20508-12.57129,2.93555C939.1748,836.64063,897.59082,860.66992,850.39453,860.66992\r\n\t\t\t\tL850.39453,860.66992z M1136.7207,559.2959c4.61426-2.66309,6.11035-8.61914,3.3125-13.15137\r\n\t\t\t\tc-59.91504-97.03027-167.22461-161.69434-289.63867-161.69434c-125.89355,0-235.81348,68.39258-294.63379,170.0498\r\n\t\t\t\tl80.37695,46.40625c4.39844,2.53906,10.00195,1.14941,12.71094-3.14551\r\n\t\t\t\tc42.16406-66.85156,116.66992-111.26367,201.5459-111.26367c88.12598,0,165.07129,47.87598,206.24316,119.03613\r\n\t\t\t\tL1136.7207,559.2959z\"/>\r\n\t\t\t<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" fill=\"#96AAB9\" d=\"M850.39453,962.7168\r\n\t\t\t\tc-84.59863,0-158.89355-44.12109-201.13086-110.60742c-2.87695-4.53027-1.40039-10.57031,3.24805-13.25586l80.03027-46.2041\r\n\t\t\t\tc-11.58105-20.0166-18.20996-43.25488-18.20996-68.04199c0-74.78516,60.55762-136.0625,136.0625-136.0625\r\n\t\t\t\tc47.19629,0,88.78027,24.0293,113.18555,60.52246c2.76465,4.13379,8.26367,5.42188,12.57129,2.93555l80.48633-46.46973\r\n\t\t\t\tc-41.17188-71.16016-118.11719-119.03613-206.24316-119.03613c-84.87598,0-159.38184,44.41211-201.5459,111.26367\r\n\t\t\t\tc-2.70605,4.29102-8.31836,5.68164-12.71094,3.14551L555.76074,554.5c-28.95215,50.04004-45.52344,108.13965-45.52344,170.10742\r\n\t\t\t\tc0,186.96484,151.39453,340.1582,340.15723,340.1582c122.41406,0,229.72363-64.66406,289.63867-161.69531\r\n\t\t\t\tc2.7959-4.52734,1.29492-10.49023-3.3125-13.15234l-80.08301-46.2373\r\n\t\t\t\tC1015.46582,914.8418,938.52051,962.7168,850.39453,962.7168z\"/>\r\n\t\t</g>\r\n\t\t<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" fill=\"#00E1C8\" d=\"M1137.18457,761.19141v-73.16797l-63.36523,36.58398\r\n\t\t\tL1137.18457,761.19141L1137.18457,761.19141z M1026.5752,708.24219l120.05859-69.31641\r\n\t\t\tc12.56836-7.25586,28.3457,1.85254,28.3457,16.36621v138.63086c0,14.5127-15.77734,23.62207-28.3457,16.36621\r\n\t\t\tl-120.05859-69.31641C1014.02734,733.72754,1014.02734,715.4873,1026.5752,708.24219z\"/>\r\n\t</g>\r\n</g>\r\n<g id=\"logo\">\r\n</g>\r\n</svg>","IconImage":"System.Windows.Media.Imaging.BitmapImage","CreateDate":"2019-01-23T18:30:12.68-08:00","LastModified":"2019-01-25T15:21:25.3811048-08:00","AddonJson":"{\r\n  \"is-c3-addon\": true,\r\n  \"type\": \"plugin\",\r\n  \"name\": \"GameSparksMinimal\",\r\n  \"id\": \"Mikal_GameSparksMinimal\",\r\n  \"version\": \"0.1.1.0\",\r\n  \"author\": \"Mikal\",\r\n  \"website\": \"https://www.construct.net\",\r\n  \"documentation\": \"https://www.construct.net\",\r\n  \"description\": \"Gamesparks Minmal Plugin, only does initialization, SendData, Returns Response. User must manually format the data to send. Use C3 JSON plugin to format data to send and parse response data.\",\r\n  \"editor-scripts\": [\r\n    \"plugin.js\",\r\n    \"type.js\",\r\n    \"instance.js\"\r\n  ],\r\n  \"file-list\": [\r\n    \"c3runtime/gamesparks.js\",\r\n    \"c3runtime/hmac-sha256.js\",\r\n    \"c3runtime/gamesparks-functions.js\",\r\n    \"c3runtime/plugin.js\",\r\n    \"c3runtime/type.js\",\r\n    \"c3runtime/instance.js\",\r\n    \"c3runtime/conditions.js\",\r\n    \"c3runtime/actions.js\",\r\n    \"c3runtime/expressions.js\",\r\n    \"lang/en-US.json\",\r\n    \"aces.json\",\r\n    \"addon.json\",\r\n    \"icon.svg\",\r\n    \"instance.js\",\r\n    \"plugin.js\",\r\n    \"type.js\"\r\n  ]\r\n}","PluginEditTime":"\"use strict\";\r\n{\r\n\r\n\tconst PLUGIN_ID = \"Mikal_GameSparksMinimal\";\t\r\n\tconst PLUGIN_VERSION = \"0.1.1.0\";\r\n\tconst PLUGIN_CATEGORY = \"general\";\r\n\t\r\n\tconst PLUGIN_CLASS = SDK.Plugins.Mikal_GameSparksMinimal = class GameSparksMinimalPlugin extends SDK.IPluginBase\r\n\t{\r\n\t\tconstructor()\r\n\t\t{\r\n\t\t\tsuper(PLUGIN_ID);\r\n\t\t\t\r\n\t\t\tSDK.Lang.PushContext(\"plugins.\" + PLUGIN_ID.toLowerCase());\r\n\t\t\t\r\n\t\t\tthis._info.SetName(lang(\".name\"));\r\n\t\t\tthis._info.SetDescription(lang(\".description\"));\r\n\t\t\tthis._info.SetVersion(PLUGIN_VERSION);\r\n\t\t\tthis._info.SetCategory(PLUGIN_CATEGORY);\r\n\t\t\tthis._info.SetAuthor(\"Mikal\");\r\n\t\t\tthis._info.SetHelpUrl(lang(\".help-url\"));\r\n\t\t\tthis._info.SetIsSingleGlobal(true);\r\n\r\n\t\t\tthis._info.SetSupportedRuntimes([\"c3\"]);\r\n\t\t\t\r\n\t\t\tthis._info.AddFileDependency({\r\n\t\t\t\tfilename: \"c3runtime/gamesparks.js\",\r\n\t\t\t\ttype: \"external-script\"\r\n\t\t\t\t});\r\n\t\t\tthis._info.AddFileDependency({\r\n\t\t\t\tfilename: \"c3runtime/gamesparks-functions.js\",\r\n\t\t\t\ttype: \"external-script\"\r\n\t\t\t\t});\r\n\t\t\tthis._info.AddFileDependency({\r\n\t\t\t\tfilename: \"c3runtime/hmac-sha256.js\",\r\n\t\t\t\ttype: \"external-script\"\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t\tSDK.Lang.PushContext(\".properties\");\r\n\t\r\n\t\t\tthis._info.SetProperties([\n\t\t\t\tnew SDK.PluginProperty(\"text\", \"apiKey\", \"value\"),\n\t\t\t\tnew SDK.PluginProperty(\"text\", \"apiSecret\", \"value\")\r\n\r\n\t\t\t]);\r\n\r\n            SDK.Lang.PopContext(); //.properties\r\n\t\t\tSDK.Lang.PopContext();\r\n\t\t}\r\n\t};\r\n\t\r\n\tPLUGIN_CLASS.Register(PLUGIN_ID, PLUGIN_CLASS);\r\n}","PluginRunTime":"\"use strict\";\n{\n\tC3.Plugins.Mikal_GameSparksMinimal = class GameSparksMinimalPlugin extends C3.SDKPluginBase\n\t{\n\t\tconstructor(opts)\n\t\t{\n\t\t\tsuper(opts);\n\t\t}\n\t\t\n\t\tRelease()\n\t\t{\n\t\t\tsuper.Release();\n\t\t}\n\t};\n}","TypeEditTime":"\"use strict\";\r\n{\r\n\tconst PLUGIN_CLASS = SDK.Plugins.Mikal_GameSparksMinimal;\r\n\t\r\n\tPLUGIN_CLASS.Type = class GameSparksMinimalType extends SDK.ITypeBase\r\n\t{\r\n\t\tconstructor(sdkPlugin, iObjectType)\r\n\t\t{\r\n\t\t\tsuper(sdkPlugin, iObjectType);\r\n\t\t}\r\n\t};\r\n}","TypeRunTime":"\"use strict\";\r\n{\r\n\tC3.Plugins.Mikal_GameSparksMinimal.Type = class GameSparksMinimalType extends C3.SDKTypeBase\r\n\t{\r\n\t\tconstructor(objectClass)\r\n\t\t{\r\n\t\t\tsuper(objectClass);\r\n\t\t}\r\n\t\t\r\n\t\tRelease()\r\n\t\t{\r\n\t\t\tsuper.Release();\r\n\t\t}\r\n\t\t\r\n\t\tOnCreate()\r\n\t\t{\t\r\n\t\t}\r\n\t};\r\n}","InstanceEditTime":"\"use strict\";\r\n{\r\n\tconst PLUGIN_CLASS = SDK.Plugins.Mikal_GameSparksMinimal;\r\n\t\r\n\tPLUGIN_CLASS.Instance = class GameSparksMinimalInstance extends SDK.IInstanceBase\r\n\t{\r\n\t\tconstructor(sdkType, inst)\r\n\t\t{\r\n\t\t\tsuper(sdkType, inst);\r\n\t\t}\r\n\t\t\r\n\t\tRelease()\r\n\t\t{\r\n\t\t}\r\n\t\t\r\n\t\tOnCreate()\r\n\t\t{\t\t\r\n\t\t}\r\n\t\t\r\n\t\tOnPropertyChanged(id, value)\r\n\t\t{\r\n\t\t}\r\n\t\t\r\n\t\tLoadC2Property(name, valueString)\r\n\t\t{\r\n\t\t\treturn false;\t\t// not handled\r\n\t\t}\r\n\t};\r\n}","InstanceRunTime":"\"use strict\";\r\n{\r\n\tC3.Plugins.Mikal_GameSparksMinimal.Instance = class GameSparksMinimalInstance extends C3.SDKInstanceBase\r\n\t{\r\n\t\tconstructor(inst, properties)\r\n\t\t{\r\n\t\t\tsuper(inst);\r\n\t\t\t\r\n\t\t\tthis.gamesparks = new GameSparks();\r\n\t\t\t\r\n\t\t\tthis._apiKeyGS = 0;\r\n\t\t\tthis._apiSecretGS = 0;\r\n\t\t\t\r\n\t\t\tif (properties)\r\n\t\t\t{\r\n\t\t\t\tthis._apiKeyGS    = properties[0];\r\n\t\t\t\tvar apiSecretGS = properties[1];\r\n\t\t\t} else\r\n\t\t\t{\r\n\t\t\tconsole.log(\"***DEBUG*** GameSparksMinmal: Properties Null\")\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar runtime = this._runtime;\r\n\t\t\tvar currInstance = this;\r\n\t\t\tvar gamesparks = this.gamesparks;\r\n\t\t\tvar myC3 = C3;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\tthis._lastMessageGS = \"\";\r\n\t\t\tthis._lastResponseGS = \"\";\r\n\r\n\t\t\tthis.onNonceGS = function(nonce) {\r\n\t\t\t\treturn CryptoJS.enc.Base64.stringify(CryptoJS.HmacSHA256(nonce, apiSecretGS));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t////////////////////////////////\r\n\t\t\t//// C3Memory\r\n\t\t\tthis.C3Memory = {\r\n\t\t\t\tLastMessageGS : \"\",\t\t// Last GameSparks Message\r\n\t\t\t\tLastResponseGS : \"\"\t\t// Last GameSparks Response\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst self = this;\r\n\t\t\tconst Conditions = C3.Plugins.Mikal_GameSparksMinimal.Cnds;\r\n\r\n\t\t\t////////////////////////////////\r\n\t\t\t//// C3Triggers\r\n\t\t\tthis.C3Trigger = {\r\n\r\n\t\t\t\t\toninit : function() {\r\n\t\t\t\t\t\tself.Call(Conditions.oninit);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonresponse : function() {\r\n\t\t\t\t\t\tself.Call(Conditions.onresponse);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonmessage : function() {\r\n\t\t\t\t\t\tself.Call(Conditions.onmessage);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t\t////////////////////////////////\r\n\t\t\t//// CallFunction\r\n\t\t\t//// .... Call Trigger\r\n\t\t\tthis.Call = function (_path) {\r\n\t\t\t\tconst trigger = _path;\r\n\r\n\t\t\t\tself.Trigger(trigger);\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tthis.onInitGS = function() {\r\n\t\t\t\tcurrInstance.C3Trigger.oninit();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.onMessageGS = function(message) {\r\n\t\t\t\tcurrInstance._lastMessageGS = JSON.stringify(message);\t\t\t\t\r\n\t\t\t\t// console.log(\"***DEBUG*** onMessageGS: \"+currInstance._lastMessageGS);\r\n\t\t\t\r\n\t\t\t\tcurrInstance.C3Trigger.onmessage();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.onResponseGS = function(response) {\r\n\t\t\t\tcurrInstance._lastResponseGS = JSON.stringify(response);\t\t\t\t\r\n\t\t\t\t// console.log(\"***DEBUG*** onResponseGS: \"+currInstance._lastResponseGS);\r\n\t\t\t\r\n\t\t\t\tcurrInstance.C3Trigger.onresponse();\r\n\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tRelease()\r\n\t\t{\r\n\t\t\tsuper.Release();\r\n\t\t}\r\n\t\t\r\n\t\tSaveToJson()\r\n\t\t{\r\n\t\t\treturn {\r\n\t\t\t\t// data to be saved for savegames\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tLoadFromJson(o)\r\n\t\t{\r\n\t\t\t// load state for savegames\r\n\t\t}\r\n\t};\r\n}","LanguageProperties":"\"properties\":{\r\n    \"apiKey\" : {\r\n        \"name\": \"apiKey\",\r\n        \"desc\": \"apiKey\"\r\n    },\n    \"apiSecret\" : {\r\n        \"name\": \"apiSecret\",\r\n        \"desc\": \"apiSecret\"\r\n    }\r\n}","LanguageCategories":"\"aceCategories\": {\r\n    \"connection\" : \"Connection\"\r\n}","Categories":["connection"],"Actions":{"initpreview":{"Id":"initpreview","Category":"connection","ScriptName":"Initpreview","Ace":"{\r\n\t\"id\": \"initpreview\",\r\n\t\"scriptName\": \"Initpreview\",\r\n\t\"highlight\": false :\r\n}","DisplayText":"InitPreview","Description":"Initialise the SDK and connect to the preview server.","Highlight":"false","Language":"\"initpreview\": {\r\n\t\"list-name\": \"InitPreview\",\r\n\t\"display-text\": \"InitPreview\",\r\n\t\"description\": \"Initialise the SDK and connect to the preview server.\"\r\n}","Code":"Initpreview()\r\n{\r\n\tconsole.log(\"Initpreview() called.\");\r\n\t//implementation\r\n\tconst data = {\r\n\t\tkey: this._apiKeyGS,\r\n\t\tsecret: this._apiSecret,\r\n\t\tonNonce: this.onNonceGS,\r\n\t\tonInit: this.onInitGS,\r\n\t\tonMessage: this.onMessageGS,\r\n\t\tlogger: console.log\r\n\t};\r\n\t\r\n\tthis.gamesparks.initPreview(data);\r\n\t\r\n}","ListName":"InitPreview"},"sendwithdata":{"Id":"sendwithdata","Category":"connection","ScriptName":"Sendwithdata","Ace":"{\r\n  \"id\": \"sendwithdata\",\r\n  \"scriptName\": \"sendwithdata\",\r\n  \"highlight\": true,\r\n  \"params\": [\r\n    {\r\n      \"id\": \"requesttype\",\r\n      \"type\": \"string\"\r\n    },\r\n    {\r\n      \"id\": \"jsondata\",\r\n      \"type\": \"string\"\r\n    }\r\n  ]\r\n}","DisplayText":"Send With Data {0} {1}","Description":"Send with Data to GS servers from client.","Highlight":"true","Language":"\"sendwithdata\": {\r\n\t\"list-name\": \"SendWithData\",\r\n\t\"display-text\": \"Send With Data {0} {1}\",\r\n\t\"description\": \"Send with Data to GS servers from client.\",\r\n\t    \"params\": {\r\n        \"requesttype\": {\r\n            \"name\": \"RequestType\",\r\n            \"desc\": \"Request Type.\"\r\n        },\r\n        \"jsondata\": {\r\n            \"name\": \"JSONData\",\r\n            \"desc\": \"JSON as a string.\"\r\n        }\r\n    }\r\n}","Code":"sendwithdata(requesttype, jsondata)\n{\n\t//implementation\n\tconsole.log(\"***DEBUG*** sendwithdata() called. \"+requesttype+\"  \"+jsondata);\n\t\n\tthis.gamesparks.sendWithData(requesttype, JSON.parse(jsondata), this.onResponseGS);\n\n}","ListName":"sendwithdata"},"initlive":{"Id":"initlive","Category":"connection","ScriptName":"Initlive","Ace":"{\r\n\t\"id\": \"initlive\",\r\n\t\"scriptName\": \"Initlive\",\r\n\t\"highlight\": false\r\n}","DisplayText":"InitLive","Description":"Initialize Live GS connection.","Highlight":"false","Language":"\"initlive\": {\r\n\t\"list-name\": \"InitLive\",\r\n\t\"display-text\": \"InitLive\",\r\n\t\"description\": \"Initialise the SDK and connect to the live server.\"\r\n}","Code":"Initlive()\n{\n\tconsole.log(\"Initlive() called.\");\n\t//implementation\n\tconst data = {\n\t\tkey: this._apiKeyGS,\n\t\tsecret: this._apiSecret,\n\t\tonNonce: this.onNonceGS,\n\t\tonInit: this.onInitGS,\n\t\tonMessage: this.onMessageGS,\n\t\tlogger: console.log\n\t};\n\t\n\tthis.gamesparks.initLive(data);\n\n}","ListName":"initlive"}},"Conditions":{"oninit":{"Id":"oninit","Category":"connection","ListName":"On Init","ScriptName":"Oninit","Ace":"{\r\n\t\"id\": \"oninit\",\r\n\t\"scriptName\": \"oninit\",\r\n\t\"isTrigger\": \"true\",\r\n\t\"highlight\": false\n}","DisplayText":"On init","Description":"Triggered when the SDK is finished initialising.","Highlight":"false","Language":"\"oninit\": {\r\n\t\"list-name\": \"On Init\",\r\n\t\"display-text\": \"On Init\",\r\n\t\"description\": \"Triggered when the SDK is finished initialising.\"\r\n}","Code":"oninit()\r\n{\r\n\t//implementation\r\n\tconsole.log(\"***DEBUG*** oninit trigger\");\r\n\treturn true;\r\n}","Trigger":"true","FakeTrigger":"false","Static":"false","Looping":"false","Invertible":"true","TriggerCompatible":"true"},"onmessage":{"Id":"onmessage","Category":"connection","ListName":"On Message","ScriptName":"Onmessage","Ace":"{\r\n\t\"id\": \"onmessage\",\r\n\t\"scriptName\": \"onmessage\",\r\n\t\"isTrigger\": \"true\",\n\t\"highlight\": true\n}","DisplayText":"On Message","Description":"Triggered when a message object is sent from the server to the client.","Highlight":"false","Language":"\"onmessage\": {\r\n\t\"list-name\": \"On Message\",\r\n\t\"display-text\": \"On Message\",\r\n\t\"description\": \"Triggered when a message object is sent from the server to the client.\"\r\n}","Code":"onmessage()\r\n{\r\n\t//implementation\r\n\tconsole.log(\"***DEBUG*** Oninit Trigger\");\r\n\treturn true;\r\n}","Trigger":"true","FakeTrigger":"false","Static":"false","Looping":"false","Invertible":"true","TriggerCompatible":"true"},"onresponse":{"Id":"onresponse","Category":"connection","ListName":"onresponse","ScriptName":"Onresponse","Ace":"{\r\n\t\"id\": \"onresponse\",\r\n\t\"scriptName\": \"onresponse\",\r\n\t\"highlight\": true,\n\t\"isTrigger\": true\r\n}","DisplayText":"ON Message","Description":"Triggered","Highlight":"true","Language":"\"onresponse\": {\r\n\t\"list-name\": \"On Response\",\r\n\t\"display-text\": \"On Response\",\r\n\t\"description\": \"Triggered when a response object is sent from the server to the client.\"\r\n}","Code":"onresponse()\n{\n\t//implementation\n\treturn true;\n}","Trigger":"true","FakeTrigger":"false","Static":"false","Looping":"false","Invertible":"true","TriggerCompatible":"true"}},"Expressions":{"lastmessage":{"Id":"lastmessage","Category":"connection","ScriptName":"LastMessage","IsVariadicParameters":"lastmessage","Ace":"{\r\n\t\"id\": \"lastmessage\",\r\n\t\"expressionName\": \"lastmessage\",\r\n\t\"returnType\": \"any\"\r\n}","TranslatedName":"LastMessage","Description":"Last Message received from GameSparks.","ReturnType":"any","Language":"\"lastmessage\": { \r\n\t\"translated-name\": \"lastmessage\",\r\n\t\"description\": \"Last Message received from GameSparks.\"\r\n}","Code":"lastmessage()\r\n{\r\n\t//implementation\r\n\treturn this._lastMessageGS;\r\n}"},"lastresponse":{"Id":"lastresponse","Category":"connection","ScriptName":"lastresponse","IsVariadicParameters":"lastresponse","Ace":"{\r\n\t\"id\": \"lastresponse\",\r\n\t\"expressionName\": \"lastresponse\",\r\n\t\"returnType\": \"string\"\r\n}","TranslatedName":"lastresponse","Description":"This is the expression description","ReturnType":"string","Language":"\"lastresponse\": { \r\n\t\"translated-name\": \"lastresponse\",\r\n\t\"description\": \"Last Message received from GameSparks.\"\r\n}","Code":"lastresponse()\n{\n\t//implementation\n\treturn this._lastResponseGS;\n}"}},"ThirdPartyFiles":{"hmac-sha256.js":{"FileName":"hmac-sha256.js","Content":"/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\nvar CryptoJS=CryptoJS||function(h,s){var f={},g=f.lib={},q=function(){},m=g.Base={extend:function(a){q.prototype=this;var c=new q;a&&c.mixIn(a);c.hasOwnProperty(\"init\")||(c.init=function(){c.$super.init.apply(this,arguments)});c.init.prototype=c;c.$super=this;return c},create:function(){var a=this.extend();a.init.apply(a,arguments);return a},init:function(){},mixIn:function(a){for(var c in a)a.hasOwnProperty(c)&&(this[c]=a[c]);a.hasOwnProperty(\"toString\")&&(this.toString=a.toString)},clone:function(){return this.init.prototype.extend(this)}},\nr=g.WordArray=m.extend({init:function(a,c){a=this.words=a||[];this.sigBytes=c!=s?c:4*a.length},toString:function(a){return(a||k).stringify(this)},concat:function(a){var c=this.words,d=a.words,b=this.sigBytes;a=a.sigBytes;this.clamp();if(b%4)for(var e=0;e<a;e++)c[b+e>>>2]|=(d[e>>>2]>>>24-8*(e%4)&255)<<24-8*((b+e)%4);else if(65535<d.length)for(e=0;e<a;e+=4)c[b+e>>>2]=d[e>>>2];else c.push.apply(c,d);this.sigBytes+=a;return this},clamp:function(){var a=this.words,c=this.sigBytes;a[c>>>2]&=4294967295<<\n32-8*(c%4);a.length=h.ceil(c/4)},clone:function(){var a=m.clone.call(this);a.words=this.words.slice(0);return a},random:function(a){for(var c=[],d=0;d<a;d+=4)c.push(4294967296*h.random()|0);return new r.init(c,a)}}),l=f.enc={},k=l.Hex={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++){var e=c[b>>>2]>>>24-8*(b%4)&255;d.push((e>>>4).toString(16));d.push((e&15).toString(16))}return d.join(\"\")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b+=2)d[b>>>3]|=parseInt(a.substr(b,\n2),16)<<24-4*(b%8);return new r.init(d,c/2)}},n=l.Latin1={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++)d.push(String.fromCharCode(c[b>>>2]>>>24-8*(b%4)&255));return d.join(\"\")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b++)d[b>>>2]|=(a.charCodeAt(b)&255)<<24-8*(b%4);return new r.init(d,c)}},j=l.Utf8={stringify:function(a){try{return decodeURIComponent(escape(n.stringify(a)))}catch(c){throw Error(\"Malformed UTF-8 data\");}},parse:function(a){return n.parse(unescape(encodeURIComponent(a)))}},\nu=g.BufferedBlockAlgorithm=m.extend({reset:function(){this._data=new r.init;this._nDataBytes=0},_append:function(a){\"string\"==typeof a&&(a=j.parse(a));this._data.concat(a);this._nDataBytes+=a.sigBytes},_process:function(a){var c=this._data,d=c.words,b=c.sigBytes,e=this.blockSize,f=b/(4*e),f=a?h.ceil(f):h.max((f|0)-this._minBufferSize,0);a=f*e;b=h.min(4*a,b);if(a){for(var g=0;g<a;g+=e)this._doProcessBlock(d,g);g=d.splice(0,a);c.sigBytes-=b}return new r.init(g,b)},clone:function(){var a=m.clone.call(this);\na._data=this._data.clone();return a},_minBufferSize:0});g.Hasher=u.extend({cfg:m.extend(),init:function(a){this.cfg=this.cfg.extend(a);this.reset()},reset:function(){u.reset.call(this);this._doReset()},update:function(a){this._append(a);this._process();return this},finalize:function(a){a&&this._append(a);return this._doFinalize()},blockSize:16,_createHelper:function(a){return function(c,d){return(new a.init(d)).finalize(c)}},_createHmacHelper:function(a){return function(c,d){return(new t.HMAC.init(a,\nd)).finalize(c)}}});var t=f.algo={};return f}(Math);\n(function(h){for(var s=CryptoJS,f=s.lib,g=f.WordArray,q=f.Hasher,f=s.algo,m=[],r=[],l=function(a){return 4294967296*(a-(a|0))|0},k=2,n=0;64>n;){var j;a:{j=k;for(var u=h.sqrt(j),t=2;t<=u;t++)if(!(j%t)){j=!1;break a}j=!0}j&&(8>n&&(m[n]=l(h.pow(k,0.5))),r[n]=l(h.pow(k,1/3)),n++);k++}var a=[],f=f.SHA256=q.extend({_doReset:function(){this._hash=new g.init(m.slice(0))},_doProcessBlock:function(c,d){for(var b=this._hash.words,e=b[0],f=b[1],g=b[2],j=b[3],h=b[4],m=b[5],n=b[6],q=b[7],p=0;64>p;p++){if(16>p)a[p]=\nc[d+p]|0;else{var k=a[p-15],l=a[p-2];a[p]=((k<<25|k>>>7)^(k<<14|k>>>18)^k>>>3)+a[p-7]+((l<<15|l>>>17)^(l<<13|l>>>19)^l>>>10)+a[p-16]}k=q+((h<<26|h>>>6)^(h<<21|h>>>11)^(h<<7|h>>>25))+(h&m^~h&n)+r[p]+a[p];l=((e<<30|e>>>2)^(e<<19|e>>>13)^(e<<10|e>>>22))+(e&f^e&g^f&g);q=n;n=m;m=h;h=j+k|0;j=g;g=f;f=e;e=k+l|0}b[0]=b[0]+e|0;b[1]=b[1]+f|0;b[2]=b[2]+g|0;b[3]=b[3]+j|0;b[4]=b[4]+h|0;b[5]=b[5]+m|0;b[6]=b[6]+n|0;b[7]=b[7]+q|0},_doFinalize:function(){var a=this._data,d=a.words,b=8*this._nDataBytes,e=8*a.sigBytes;\nd[e>>>5]|=128<<24-e%32;d[(e+64>>>9<<4)+14]=h.floor(b/4294967296);d[(e+64>>>9<<4)+15]=b;a.sigBytes=4*d.length;this._process();return this._hash},clone:function(){var a=q.clone.call(this);a._hash=this._hash.clone();return a}});s.SHA256=q._createHelper(f);s.HmacSHA256=q._createHmacHelper(f)})(Math);\n(function(){var h=CryptoJS,s=h.enc.Utf8;h.algo.HMAC=h.lib.Base.extend({init:function(f,g){f=this._hasher=new f.init;\"string\"==typeof g&&(g=s.parse(g));var h=f.blockSize,m=4*h;g.sigBytes>m&&(g=f.finalize(g));g.clamp();for(var r=this._oKey=g.clone(),l=this._iKey=g.clone(),k=r.words,n=l.words,j=0;j<h;j++)k[j]^=1549556828,n[j]^=909522486;r.sigBytes=l.sigBytes=m;this.reset()},reset:function(){var f=this._hasher;f.reset();f.update(this._iKey)},update:function(f){this._hasher.update(f);return this},finalize:function(f){var g=\nthis._hasher;f=g.finalize(f);g.reset();return g.finalize(this._oKey.clone().concat(f))}})})();\n\n(function(){var h=CryptoJS,i=h.lib.WordArray;h.enc.Base64={stringify:function(b){var e=b.words,f=b.sigBytes,c=this._map;b.clamp();for(var b=[],a=0;a<f;a+=3)for(var d=(e[a>>>2]>>>24-8*(a%4)&255)<<16|(e[a+1>>>2]>>>24-8*((a+1)%4)&255)<<8|e[a+2>>>2]>>>24-8*((a+2)%4)&255,g=0;4>g&&a+0.75*g<f;g++)b.push(c.charAt(d>>>6*(3-g)&63));if(e=c.charAt(64))for(;b.length%4;)b.push(e);return b.join(\"\")},parse:function(b){var b=b.replace(/\\s/g,\"\"),e=b.length,f=this._map,c=f.charAt(64);c&&(c=b.indexOf(c),-1!=c&&(e=c));\nfor(var c=[],a=0,d=0;d<e;d++)if(d%4){var g=f.indexOf(b.charAt(d-1))<<2*(d%4),h=f.indexOf(b.charAt(d))>>>6-2*(d%4);c[a>>>2]|=(g|h)<<24-8*(a%4);a++}return i.create(c,a)},_map:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"}})();","PluginTemplate":"{\r\n\tfilename: \"c3runtime/hmac-sha256.js\",\r\n\ttype: \"inline-script\"\r\n}"},"gamesparks-functions.js":{"FileName":"gamesparks-functions.js","Content":"GameSparks.prototype.acceptChallengeRequest = function(challengeInstanceId, message, onResponse )\n{\n    var request = {};\n\t\trequest[\"challengeInstanceId\"] = challengeInstanceId;\n\t\trequest[\"message\"] = message;\n    gamesparks.sendWithData(\"AcceptChallengeRequest\", request, onResponse);\n}\nGameSparks.prototype.accountDetailsRequest = function(onResponse )\n{\n    var request = {};\n    gamesparks.sendWithData(\"AccountDetailsRequest\", request, onResponse);\n}\nGameSparks.prototype.analyticsRequest = function(data, end, key, start, onResponse )\n{\n    var request = {};\n\t\trequest[\"data\"] = data;\n\t\trequest[\"end\"] = end;\n\t\trequest[\"key\"] = key;\n\t\trequest[\"start\"] = start;\n    gamesparks.sendWithData(\"AnalyticsRequest\", request, onResponse);\n}\nGameSparks.prototype.aroundMeLeaderboardRequest = function(count, friendIds, leaderboardShortCode, social, onResponse )\n{\n    var request = {};\n\t\trequest[\"count\"] = count;\n\t\trequest[\"friendIds\"] = friendIds;\n\t\trequest[\"leaderboardShortCode\"] = leaderboardShortCode;\n\t\trequest[\"social\"] = social;\n    gamesparks.sendWithData(\"AroundMeLeaderboardRequest\", request, onResponse);\n}\nGameSparks.prototype.authenticationRequest = function(password, userName, onResponse )\n{\n    var request = {};\n\t\trequest[\"password\"] = password;\n\t\trequest[\"userName\"] = userName;\n    gamesparks.sendWithData(\"AuthenticationRequest\", request, onResponse);\n}\nGameSparks.prototype.buyVirtualGoodsRequest = function(currencyType, quantity, shortCode, onResponse )\n{\n    var request = {};\n\t\trequest[\"currencyType\"] = currencyType;\n\t\trequest[\"quantity\"] = quantity;\n\t\trequest[\"shortCode\"] = shortCode;\n    gamesparks.sendWithData(\"BuyVirtualGoodsRequest\", request, onResponse);\n}\nGameSparks.prototype.changeUserDetailsRequest = function(displayName, onResponse )\n{\n    var request = {};\n\t\trequest[\"displayName\"] = displayName;\n    gamesparks.sendWithData(\"ChangeUserDetailsRequest\", request, onResponse);\n}\nGameSparks.prototype.chatOnChallengeRequest = function(challengeInstanceId, message, onResponse )\n{\n    var request = {};\n\t\trequest[\"challengeInstanceId\"] = challengeInstanceId;\n\t\trequest[\"message\"] = message;\n    gamesparks.sendWithData(\"ChatOnChallengeRequest\", request, onResponse);\n}\nGameSparks.prototype.consumeVirtualGoodRequest = function(quantity, shortCode, onResponse )\n{\n    var request = {};\n\t\trequest[\"quantity\"] = quantity;\n\t\trequest[\"shortCode\"] = shortCode;\n    gamesparks.sendWithData(\"ConsumeVirtualGoodRequest\", request, onResponse);\n}\nGameSparks.prototype.createChallengeRequest = function(accessType, challengeMessage, challengeShortCode, currency1Wager, currency2Wager, currency3Wager, currency4Wager, currency5Wager, currency6Wager, endTime, expiryTime, maxAttempts, maxPlayers, minPlayers, silent, startTime, usersToChallenge, onResponse )\n{\n    var request = {};\n\t\trequest[\"accessType\"] = accessType;\n\t\trequest[\"challengeMessage\"] = challengeMessage;\n\t\trequest[\"challengeShortCode\"] = challengeShortCode;\n\t\trequest[\"currency1Wager\"] = currency1Wager;\n\t\trequest[\"currency2Wager\"] = currency2Wager;\n\t\trequest[\"currency3Wager\"] = currency3Wager;\n\t\trequest[\"currency4Wager\"] = currency4Wager;\n\t\trequest[\"currency5Wager\"] = currency5Wager;\n\t\trequest[\"currency6Wager\"] = currency6Wager;\n\t\trequest[\"endTime\"] = endTime;\n\t\trequest[\"expiryTime\"] = expiryTime;\n\t\trequest[\"maxAttempts\"] = maxAttempts;\n\t\trequest[\"maxPlayers\"] = maxPlayers;\n\t\trequest[\"minPlayers\"] = minPlayers;\n\t\trequest[\"silent\"] = silent;\n\t\trequest[\"startTime\"] = startTime;\n\t\trequest[\"usersToChallenge\"] = usersToChallenge;\n    gamesparks.sendWithData(\"CreateChallengeRequest\", request, onResponse);\n}\nGameSparks.prototype.declineChallengeRequest = function(challengeInstanceId, message, onResponse )\n{\n    var request = {};\n\t\trequest[\"challengeInstanceId\"] = challengeInstanceId;\n\t\trequest[\"message\"] = message;\n    gamesparks.sendWithData(\"DeclineChallengeRequest\", request, onResponse);\n}\nGameSparks.prototype.deviceAuthenticationRequest = function(deviceId, deviceModel, deviceName, deviceOS, deviceType, operatingSystem, onResponse )\n{\n    var request = {};\n\t\trequest[\"deviceId\"] = deviceId;\n\t\trequest[\"deviceModel\"] = deviceModel;\n\t\trequest[\"deviceName\"] = deviceName;\n\t\trequest[\"deviceOS\"] = deviceOS;\n\t\trequest[\"deviceType\"] = deviceType;\n\t\trequest[\"operatingSystem\"] = operatingSystem;\n    gamesparks.sendWithData(\"DeviceAuthenticationRequest\", request, onResponse);\n}\nGameSparks.prototype.dismissMessageRequest = function(messageId, onResponse )\n{\n    var request = {};\n\t\trequest[\"messageId\"] = messageId;\n    gamesparks.sendWithData(\"DismissMessageRequest\", request, onResponse);\n}\nGameSparks.prototype.endSessionRequest = function(onResponse )\n{\n    var request = {};\n    gamesparks.sendWithData(\"EndSessionRequest\", request, onResponse);\n}\nGameSparks.prototype.facebookConnectRequest = function(accessToken, code, onResponse )\n{\n    var request = {};\n\t\trequest[\"accessToken\"] = accessToken;\n\t\trequest[\"code\"] = code;\n    gamesparks.sendWithData(\"FacebookConnectRequest\", request, onResponse);\n}\nGameSparks.prototype.findChallengeRequest = function(accessType, count, offset, onResponse )\n{\n    var request = {};\n\t\trequest[\"accessType\"] = accessType;\n\t\trequest[\"count\"] = count;\n\t\trequest[\"offset\"] = offset;\n    gamesparks.sendWithData(\"FindChallengeRequest\", request, onResponse);\n}\nGameSparks.prototype.getChallengeRequest = function(challengeInstanceId, message, onResponse )\n{\n    var request = {};\n\t\trequest[\"challengeInstanceId\"] = challengeInstanceId;\n\t\trequest[\"message\"] = message;\n    gamesparks.sendWithData(\"GetChallengeRequest\", request, onResponse);\n}\nGameSparks.prototype.getDownloadableRequest = function(shortCode, onResponse )\n{\n    var request = {};\n\t\trequest[\"shortCode\"] = shortCode;\n    gamesparks.sendWithData(\"GetDownloadableRequest\", request, onResponse);\n}\nGameSparks.prototype.getMessageRequest = function(messageId, onResponse )\n{\n    var request = {};\n\t\trequest[\"messageId\"] = messageId;\n    gamesparks.sendWithData(\"GetMessageRequest\", request, onResponse);\n}\nGameSparks.prototype.getRunningTotalsRequest = function(friendIds, shortCode, onResponse )\n{\n    var request = {};\n\t\trequest[\"friendIds\"] = friendIds;\n\t\trequest[\"shortCode\"] = shortCode;\n    gamesparks.sendWithData(\"GetRunningTotalsRequest\", request, onResponse);\n}\nGameSparks.prototype.getUploadUrlRequest = function(uploadData, onResponse )\n{\n    var request = {};\n\t\trequest[\"uploadData\"] = uploadData;\n    gamesparks.sendWithData(\"GetUploadUrlRequest\", request, onResponse);\n}\nGameSparks.prototype.getUploadedRequest = function(uploadId, onResponse )\n{\n    var request = {};\n\t\trequest[\"uploadId\"] = uploadId;\n    gamesparks.sendWithData(\"GetUploadedRequest\", request, onResponse);\n}\nGameSparks.prototype.googlePlayBuyGoodsRequest = function(currencyCode, signature, signedData, subUnitPrice, onResponse )\n{\n    var request = {};\n\t\trequest[\"currencyCode\"] = currencyCode;\n\t\trequest[\"signature\"] = signature;\n\t\trequest[\"signedData\"] = signedData;\n\t\trequest[\"subUnitPrice\"] = subUnitPrice;\n    gamesparks.sendWithData(\"GooglePlayBuyGoodsRequest\", request, onResponse);\n}\nGameSparks.prototype.iOSBuyGoodsRequest = function(currencyCode, receipt, sandbox, subUnitPrice, onResponse )\n{\n    var request = {};\n\t\trequest[\"currencyCode\"] = currencyCode;\n\t\trequest[\"receipt\"] = receipt;\n\t\trequest[\"sandbox\"] = sandbox;\n\t\trequest[\"subUnitPrice\"] = subUnitPrice;\n    gamesparks.sendWithData(\"IOSBuyGoodsRequest\", request, onResponse);\n}\nGameSparks.prototype.joinChallengeRequest = function(challengeInstanceId, message, onResponse )\n{\n    var request = {};\n\t\trequest[\"challengeInstanceId\"] = challengeInstanceId;\n\t\trequest[\"message\"] = message;\n    gamesparks.sendWithData(\"JoinChallengeRequest\", request, onResponse);\n}\nGameSparks.prototype.leaderboardDataRequest = function(challengeInstanceId, entryCount, friendIds, leaderboardShortCode, offset, social, onResponse )\n{\n    var request = {};\n\t\trequest[\"challengeInstanceId\"] = challengeInstanceId;\n\t\trequest[\"entryCount\"] = entryCount;\n\t\trequest[\"friendIds\"] = friendIds;\n\t\trequest[\"leaderboardShortCode\"] = leaderboardShortCode;\n\t\trequest[\"offset\"] = offset;\n\t\trequest[\"social\"] = social;\n    gamesparks.sendWithData(\"LeaderboardDataRequest\", request, onResponse);\n}\nGameSparks.prototype.listAchievementsRequest = function(onResponse )\n{\n    var request = {};\n    gamesparks.sendWithData(\"ListAchievementsRequest\", request, onResponse);\n}\nGameSparks.prototype.listChallengeRequest = function(entryCount, offset, shortCode, state, onResponse )\n{\n    var request = {};\n\t\trequest[\"entryCount\"] = entryCount;\n\t\trequest[\"offset\"] = offset;\n\t\trequest[\"shortCode\"] = shortCode;\n\t\trequest[\"state\"] = state;\n    gamesparks.sendWithData(\"ListChallengeRequest\", request, onResponse);\n}\nGameSparks.prototype.listChallengeTypeRequest = function(onResponse )\n{\n    var request = {};\n    gamesparks.sendWithData(\"ListChallengeTypeRequest\", request, onResponse);\n}\nGameSparks.prototype.listGameFriendsRequest = function(onResponse )\n{\n    var request = {};\n    gamesparks.sendWithData(\"ListGameFriendsRequest\", request, onResponse);\n}\nGameSparks.prototype.listInviteFriendsRequest = function(onResponse )\n{\n    var request = {};\n    gamesparks.sendWithData(\"ListInviteFriendsRequest\", request, onResponse);\n}\nGameSparks.prototype.listLeaderboardsRequest = function(onResponse )\n{\n    var request = {};\n    gamesparks.sendWithData(\"ListLeaderboardsRequest\", request, onResponse);\n}\nGameSparks.prototype.listMessageRequest = function(entryCount, offset, onResponse )\n{\n    var request = {};\n\t\trequest[\"entryCount\"] = entryCount;\n\t\trequest[\"offset\"] = offset;\n    gamesparks.sendWithData(\"ListMessageRequest\", request, onResponse);\n}\nGameSparks.prototype.listMessageSummaryRequest = function(entryCount, offset, onResponse )\n{\n    var request = {};\n\t\trequest[\"entryCount\"] = entryCount;\n\t\trequest[\"offset\"] = offset;\n    gamesparks.sendWithData(\"ListMessageSummaryRequest\", request, onResponse);\n}\nGameSparks.prototype.listVirtualGoodsRequest = function(onResponse )\n{\n    var request = {};\n    gamesparks.sendWithData(\"ListVirtualGoodsRequest\", request, onResponse);\n}\nGameSparks.prototype.logChallengeEventRequest = function(challengeInstanceId, eventKey, onResponse )\n{\n    var request = {};\n\t\trequest[\"challengeInstanceId\"] = challengeInstanceId;\n\t\trequest[\"eventKey\"] = eventKey;\n    gamesparks.sendWithData(\"LogChallengeEventRequest\", request, onResponse);\n}\nGameSparks.prototype.logEventRequest = function(eventKey, onResponse )\n{\n    var request = {};\n\t\trequest[\"eventKey\"] = eventKey;\n    gamesparks.sendWithData(\"LogEventRequest\", request, onResponse);\n}\nGameSparks.prototype.pushRegistrationRequest = function(deviceOS, pushId, onResponse )\n{\n    var request = {};\n\t\trequest[\"deviceOS\"] = deviceOS;\n\t\trequest[\"pushId\"] = pushId;\n    gamesparks.sendWithData(\"PushRegistrationRequest\", request, onResponse);\n}\nGameSparks.prototype.registrationRequest = function(displayName, password, userName, onResponse )\n{\n    var request = {};\n\t\trequest[\"displayName\"] = displayName;\n\t\trequest[\"password\"] = password;\n\t\trequest[\"userName\"] = userName;\n    gamesparks.sendWithData(\"RegistrationRequest\", request, onResponse);\n}\nGameSparks.prototype.sendFriendMessageRequest = function(friendIds, message, onResponse )\n{\n    var request = {};\n\t\trequest[\"friendIds\"] = friendIds;\n\t\trequest[\"message\"] = message;\n    gamesparks.sendWithData(\"SendFriendMessageRequest\", request, onResponse);\n}\nGameSparks.prototype.socialLeaderboardDataRequest = function(challengeInstanceId, entryCount, friendIds, leaderboardShortCode, offset, social, onResponse )\n{\n    var request = {};\n\t\trequest[\"challengeInstanceId\"] = challengeInstanceId;\n\t\trequest[\"entryCount\"] = entryCount;\n\t\trequest[\"friendIds\"] = friendIds;\n\t\trequest[\"leaderboardShortCode\"] = leaderboardShortCode;\n\t\trequest[\"offset\"] = offset;\n\t\trequest[\"social\"] = social;\n    gamesparks.sendWithData(\"SocialLeaderboardDataRequest\", request, onResponse);\n}\nGameSparks.prototype.twitterConnectRequest = function(accessSecret, accessToken, onResponse )\n{\n    var request = {};\n\t\trequest[\"accessSecret\"] = accessSecret;\n\t\trequest[\"accessToken\"] = accessToken;\n    gamesparks.sendWithData(\"TwitterConnectRequest\", request, onResponse);\n}\nGameSparks.prototype.windowsBuyGoodsRequest = function(currencyCode, receipt, subUnitPrice, onResponse )\n{\n    var request = {};\n\t\trequest[\"currencyCode\"] = currencyCode;\n\t\trequest[\"receipt\"] = receipt;\n\t\trequest[\"subUnitPrice\"] = subUnitPrice;\n    gamesparks.sendWithData(\"WindowsBuyGoodsRequest\", request, onResponse);\n}\nGameSparks.prototype.withdrawChallengeRequest = function(challengeInstanceId, message, onResponse )\n{\n    var request = {};\n\t\trequest[\"challengeInstanceId\"] = challengeInstanceId;\n\t\trequest[\"message\"] = message;\n    gamesparks.sendWithData(\"WithdrawChallengeRequest\", request, onResponse);\n}","PluginTemplate":"{\r\n\tfilename: \"c3runtime/gamesparks-functions.js\",\r\n\ttype: \"inline-script\"\r\n}"},"gamesparks.js":{"FileName":"gamesparks.js","Content":"console.log(\"Loading GS JS\");\n\n/* global define, module, require */\n\n\n(function (root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine(['crypto-js', 'ws'], factory);\n\t} else if (typeof module === 'object' && module.exports) {\n\t\t// Node. Export.\n\t\tmodule.exports = factory(require('crypto-js'), require('ws'));\n\t} else {\n\t\t// Browser globals (root is window)\n\t\troot.GameSparks = factory(root.CryptoJS, root.WebSocket || root.MozWebSocket);\n\t}\n}(this, function(CryptoJS, WebSocket) {\n\n\tvar GameSparks = function() {};\n\tconsole.log(\"Defining GameSparks\");\n\tconsole.log(GameSparks);\n\tGameSparks.prototype = {\n\n\t\tinit: function(options) {\n\t\t\tthis.options = options;\n\t\t\tthis.socketUrl = options.url;\n\n\t\t\tthis.pendingRequests = {};\n\t\t\tthis.requestCounter = 0;\n\n\t\t\tthis.connect();\n\t\t},\n\n\t\tbuildServiceUrl: function(live, options) {\n\t\t\tvar stage;\n\t\t    var urlAddition = options.key;\n\t\t    var credential;\n\t\t    var index;\n\n\t\t    if (live) {\n\t\t      stage = \"live\";\n\t\t    } else {\n\t\t      stage = \"preview\";\n\t\t    }\n\n\t\t    if (!options.credential || options.credential.length === 0) {\n\t\t      credential = \"device\";\n\t\t    } else {\n\t\t      credential = options.credential;\n\t\t    }\n\n\t\t    if (options.secret) {\n\t\t\t    index = options.secret.indexOf(\":\");\n\t\t\t    if (index > 0) {\n\t\t\t    \tcredential = \"secure\";\n\n\t\t\t    \turlAddition = options.secret.substr(0, index) + \"/\" + urlAddition;\n\t\t\t    }\n\t\t\t}\n\n\t\t    return \"wss://\" + stage + \"-\" + urlAddition + \".ws.gamesparks.net/ws/\" + credential + \"/\" + urlAddition;\n\t\t},\n\n\t\tinitPreview: function(options) {\n\t\t\toptions.url = this.buildServiceUrl(false, options);\n\t\t\tthis.init(options);\n\t\t},\n\n\t\tinitLive: function(options) {\n\t\t\toptions.url = this.buildServiceUrl(true, options);\n\t\t\tthis.init(options);\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.initialised = false;\n\t\t\tthis.connected = false;\n\t\t\tthis.error = false;\n\t\t\tthis.disconnected = false;\n\n\t\t\tif (this.webSocket != null){\n\t\t\t\tthis.webSocket.onclose = null;\n\t\t\t\tthis.webSocket.close();\n\t\t\t}\n\t\t},\n\n\t\tconnect: function() {\n\t\t\tthis.reset();\n\n\t\t\ttry {\n\t\t\t\tthis.webSocket = new WebSocket(this.socketUrl);\n\t\t\t\tthis.webSocket.onopen = this.onWebSocketOpen.bind(this);\n\t\t\t\tthis.webSocket.onclose = this.onWebSocketClose.bind(this);\n\t\t\t\tthis.webSocket.onerror = this.onWebSocketError.bind(this);\n\t\t\t\tthis.webSocket.onmessage = this.onWebSocketMessage.bind(this);\n\t\t\t} catch(e) {\n\t\t\t\tthis.log(e.message);\n\t\t\t}\n\t\t},\n\n\t\tdisconnect: function() {\n\t\t\tif (this.webSocket && this.connected) {\n\t\t\t\tthis.disconnected = true;\n\t\t\t\tthis.webSocket.close();\n\t\t\t}\n\t\t},\n\n\t\tonWebSocketOpen: function(ev) {\n\t\t\tthis.log('WebSocket onOpen');\n\n\t\t\tif (this.options.onOpen) {\n\t\t\t\tthis.options.onOpen(ev);\n\t\t\t}\n\n\t\t\tthis.connected = true;\n\t\t},\n\n\t\tonWebSocketClose: function(ev) {\n\t\t\tthis.log('WebSocket onClose');\n\n\t\t\tif (this.options.onClose) {\n\t\t\t\tthis.options.onClose(ev);\n\t\t\t}\n\n\t\t\tthis.connected = false;\n\n\t\t\t// Attemp a re-connection if not in error state or deliberately disconnected.\n\t\t\tif (!this.error && !this.disconnected) {\n\t\t\t\tthis.connect();\n\t\t\t}\n\t\t},\n\n\t\tonWebSocketError: function(ev) {\n\n\t\t\tthis.log('WebSocket onError: Sorry, but there is some problem with your socket or the server is down');\n\n\t\t\tif (this.options.onError) {\n\t\t\t\tthis.options.onError(ev);\n\t\t\t}\n\n\t\t\t// Reset the socketUrl to the original.\n\t\t\tthis.socketUrl = this.options.url;\n\n\t\t\tthis.error = true;\n\t\t},\n\n\t\tonWebSocketMessage: function(message) {\n\t\t\tthis.log('WebSocket onMessage: ' + message.data);\n\n\t\t\tvar result;\n\t\t\ttry {\n\t\t\t\tresult = JSON.parse(message.data);\n\t\t\t} catch (e) {\n\t\t\t\tthis.log('An error ocurred while parsing the JSON Data: ' + message + '; Error: ' + e);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.options.onMessage) {\n\t\t\t\tthis.options.onMessage(result);\n\t\t\t}\n\n\t\t\t// Extract any auth token.\n\t\t\tif (result['authToken']) {\n\t\t\t\tthis.authToken = result['authToken'];\n\t\t\t\tdelete result['authToken'];\n\t\t\t}\n\n\t\t\tif (result['connectUrl']) {\n\t\t\t\t// Any time a connectUrl is in the response we should update and reconnect.\n\t\t\t\tthis.socketUrl = result['connectUrl'];\n\t\t\t\tthis.connect();\n\t\t\t}\n\n\t\t\tvar resultType = result['@class'];\n\n\t\t\tif (resultType === '.AuthenticatedConnectResponse') {\n\t\t\t\tthis.handshake(result);\n\t\t\t} else if (resultType.match(/Response$/)){\n\t\t\t\tif (result['requestId']) {\n\t\t\t\t\tvar requestId = result['requestId'];\n\t\t\t\t\tdelete result['requestId'];\n\n\t\t\t\t\tif (this.pendingRequests[requestId]) {\n\t\t\t\t\t\tthis.pendingRequests[requestId](result);\n\t\t\t\t\t\tthis.pendingRequests[requestId] = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\thandshake: function(result) {\n\n\t\t\tif (result['nonce']) {\n\n\t\t\t\tvar hmac;\n\n\t\t\t\tif (this.options.onNonce) {\n\t\t\t\t\thmac = this.options.onNonce(result['nonce']);\n\t\t\t\t} else if (this.options.secret) {\n\t\t\t\t\thmac = CryptoJS.enc.Base64.stringify(CryptoJS.HmacSHA256(result['nonce'], this.options.secret));\n\t\t\t\t}\n\n\t\t\t\tvar toSend = {\n\t\t\t\t\t'@class' : '.AuthenticatedConnectRequest',\n\t\t\t\t\thmac : hmac\n\t\t\t\t};\n\n\t\t\t\tif (this.authToken) {\n\t\t\t\t\ttoSend.authToken = this.authToken;\n\t\t\t\t}\n\n\t\t\t\tif (this.sessionId) {\n\t\t\t\t\ttoSend.sessionId = this.sessionId;\n\t\t\t\t}\n\n\t\t\t\tconst browserData = this.getBrowserData();\n\t\t\t\ttoSend.platform = browserData.browser;\n\t\t\t\ttoSend.os = browserData.operatingSystem;\n\n\t\t\t\tthis.webSocketSend(toSend);\n\n\t\t\t} else if (result['sessionId']) {\n\t\t\t\tthis.sessionId = result['sessionId'];\n\t\t\t\tthis.initialised = true;\n\n\t\t\t\tif (this.options.onInit) {\n\t\t\t\t\tthis.options.onInit();\n\t\t\t\t}\n\n\t\t\t\tthis.keepAliveInterval = window.setInterval(this.keepAlive.bind(this), 30000);\n\t\t\t}\n\t\t},\n\n\t\tkeepAlive: function() {\n\t\t\tif (this.initialised && this.connected) {\n\t\t\t\tthis.webSocket.send(' ');\n\t\t\t}\n\t\t},\n\n\t\tsend: function(requestType, onResponse){\n\t\t\tthis.sendWithData(requestType, {}, onResponse);\n\t\t},\n\n\t\tsendWithData: function(requestType, json, onResponse) {\n\t\t\tif (!this.initialised) {\n\t\t\t\tonResponse({ error: 'NOT_INITIALISED' });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Ensure requestType starts with a dot.\n\t\t\tif (requestType.indexOf('.') !== 0) {\n\t\t\t\trequestType = '.' + requestType;\n\t\t\t}\n\n\t\t\tjson['@class'] = requestType;\n\n\t\t\tjson.requestId = (new Date()).getTime() + \"_\" + (++this.requestCounter);\n\n\t\t\tif (onResponse != null) {\n\t\t\t\tthis.pendingRequests[json.requestId] = onResponse;\n\t\t\t\t// Time out handler.\n\t\t\t\tsetTimeout((function() {\n\t\t\t\t\tif (this.pendingRequests[json.requestId]) {\n\t\t\t\t\t\tthis.pendingRequests[json.requestId]({ error: 'NO_RESPONSE' });\n\t\t\t\t\t}\n\t\t\t\t}).bind(this), 32000);\n\t\t\t}\n\n\t\t\tthis.webSocketSend(json);\n\t\t},\n\n\t\twebSocketSend: function(data) {\n\n\t\t\tif (this.options.onSend) {\n\t\t\t\tthis.options.onSend(data);\n\t\t\t}\n\n\t\t\tvar requestString = JSON.stringify(data);\n\t\t\tthis.log('WebSocket send: ' + requestString);\n\t\t\tthis.webSocket.send(requestString);\n\t\t},\n\n\t\tgetSocketUrl: function() {\n\t\t\treturn this.socketUrl;\n\t\t},\n\n\t\tgetSessionId: function() {\n\t\t\treturn this.sessionId;\n\t\t},\n\n\t\tgetAuthToken: function() {\n\t\t\treturn this.authToken;\n\t\t},\n\n\t\tsetAuthToken: function(authToken) {\n\t\t\tthis.authToken = authToken;\n\t\t},\n\n\t\tisConnected: function() {\n\t\t\treturn this.connected;\n\t\t},\n\n\t\tlog: function(message) {\n\t\t\tif (this.options.logger) {\n\t\t\t\tthis.options.logger(message);\n\t\t\t}\n\t\t},\n\n\t\tgetBrowserData: function() {\n\n\t\t\tvar browsers = [\n\t\t\t\t{\n\t\t\t\t\tstring: navigator.userAgent,\n\t\t\t\t\tsubString: 'Chrome',\n\t\t\t\t\tidentity: 'Chrome'\n\t\t\t\t},\n\t\t\t\t{ \tstring: navigator.userAgent,\n\t\t\t\t\tsubString: 'OmniWeb',\n\t\t\t\t\tversionSearch: 'OmniWeb/',\n\t\t\t\t\tidentity: 'OmniWeb'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tstring: navigator.vendor,\n\t\t\t\t\tsubString: 'Apple',\n\t\t\t\t\tidentity: 'Safari',\n\t\t\t\t\tversionSearch: 'Version'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tprop: window.opera,\n\t\t\t\t\tidentity: 'Opera',\n\t\t\t\t\tversionSearch: 'Version'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tstring: navigator.vendor,\n\t\t\t\t\tsubString: 'iCab',\n\t\t\t\t\tidentity: 'iCab'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tstring: navigator.vendor,\n\t\t\t\t\tsubString: 'KDE',\n\t\t\t\t\tidentity: 'Konqueror'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tstring: navigator.userAgent,\n\t\t\t\t\tsubString: 'Firefox',\n\t\t\t\t\tidentity: 'Firefox'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tstring: navigator.vendor,\n\t\t\t\t\tsubString: 'Camino',\n\t\t\t\t\tidentity: 'Camino'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tstring: navigator.userAgent,\n\t\t\t\t\tsubString: 'Netscape',\n\t\t\t\t\tidentity: 'Netscape'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tstring: navigator.userAgent,\n\t\t\t\t\tsubString: 'MSIE',\n\t\t\t\t\tidentity: 'Explorer',\n\t\t\t\t\tversionSearch: 'MSIE'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tstring: navigator.userAgent,\n\t\t\t\t\tsubString: 'Gecko',\n\t\t\t\t\tidentity: 'Mozilla',\n\t\t\t\t\tversionSearch: 'rv'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tstring: navigator.userAgent,\n\t\t\t\t\tsubString: 'Mozilla',\n\t\t\t\t\tidentity: 'Netscape',\n\t\t\t\t\tversionSearch: 'Mozilla'\n\t\t\t\t}\n\t\t\t];\n\n\t\t\tvar operatingSystems = [\n\t\t\t\t{\n\t\t\t\t\tstring: navigator.platform,\n\t\t\t\t\tsubString: 'Win',\n\t\t\t\t\tidentity: 'Windows'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tstring: navigator.platform,\n\t\t\t\t\tsubString: 'Mac',\n\t\t\t\t\tidentity: 'Mac'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t   string: navigator.userAgent,\n\t\t\t\t   subString: 'iPhone',\n\t\t\t\t   identity: 'iPhone/iPod'\n\t\t\t    },\n\t\t\t\t{\n\t\t\t\t\tstring: navigator.platform,\n\t\t\t\t\tsubString: 'Linux',\n\t\t\t\t\tidentity: 'Linux'\n\t\t\t\t}\n\t\t\t];\n\n\t\t\tfunction searchForIdentity(data) {\n\t\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\t\tvar string = data[i].string;\n\t\t\t\t\tvar prop = data[i].prop;\n\n\t\t\t\t\tif (string) {\n\t\t\t\t\t\t// Look for the sub string in the string.\n\t\t\t\t\t\tif (string.indexOf(data[i].subString) !== -1) {\n\t\t\t\t\t\t\treturn data[i].identity;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (prop) {\n\t\t\t\t\t\treturn data[i].identity;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tbrowser: searchForIdentity(browsers),\n\t\t\t\toperatingSystem: searchForIdentity(operatingSystems)\n\t\t\t};\n\t\t}\n\t};\n\n\treturn GameSparks;\n\n}));","PluginTemplate":"{\r\n\tfilename: \"c3runtime/gamesparks.js\",\r\n\ttype: \"inline-script\"\r\n}"}}}